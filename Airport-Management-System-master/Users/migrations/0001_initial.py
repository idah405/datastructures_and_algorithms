# Generated by Django 3.2.11 on 2022-06-21 08:33

import autoslug.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='slug_name')),
                ('country', django_countries.fields.CountryField(default='ke', max_length=2)),
                ('image', models.ImageField(default='user/profile/default.jpg', upload_to='user/profile/%Y/%m/')),
                ('gender', models.CharField(blank=True, choices=[('m', 'Male'), ('f', 'Female')], default='m', max_length=2, null=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('is_active', models.BooleanField(default=False, help_text='Activated, users profile is published', verbose_name='Active')),
                ('updated', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='slug_name')),
                ('is_Client', models.BooleanField(default=False, help_text="Means user can login to disposer's portal")),
                ('is_Handyman', models.BooleanField(default=False, help_text='Means user can login to staff portal')),
                ('is_financemanager', models.BooleanField(default=False, help_text='Means user can login to finance portal')),
                ('is_archived', models.BooleanField(default=False, help_text='Means User cannot login')),
                ('is_verified', models.BooleanField(default=False, help_text='Means email is valid')),
                ('updated', models.DateTimeField(auto_now=True, help_text='means last time table instance was edited', null=True, verbose_name='Updated')),
                ('created', models.DateTimeField(auto_now_add=True, help_text='time table instance was created', null=True, verbose_name='Created')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='slug_name')),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField(help_text='Feedback sent by users to admin')),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created')),
                ('admin', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='admin', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedback',
            },
        ),
    ]
